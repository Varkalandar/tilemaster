/*
 * File: PaletteEditorFrame.java
 * Creation: 04.06.2010
 * Author: Hj. Malthaner <h_malthaner@users.sourceforge.net>
 * License: See license.txt
 */

package tilemaster.editor.colors;

import asktools.ColorPaletteInterface;
import java.awt.Color;

/**
 * Standalone frame to open color map editor in a frame of
 * its own.
 * 
 * @author Hj. Malthaner
 */
public class PaletteEditorFrame extends javax.swing.JFrame
{

    private PaletteEditor paletteEditor;

    public void setColors(Color [] colors)
    {
        paletteEditor.setColors(colors);
    }

    public void addColorListener(ColorPaletteInterface cpi)
    {
        paletteEditor.addColorListener(cpi);
    }

    public Color [] getColors()
    {
        return paletteEditor.getColors();
    }

    /** Creates new form PaletteEditorFrame */
    public PaletteEditorFrame()
    {
        initComponents();

        paletteEditor = new PaletteEditor();

        getContentPane().add(paletteEditor);

        setSize(370, 380);
        setLocation(790, 10);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tilemaster Palette Editor");
        setResizable(false);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PaletteEditorFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
